# Security Tools Connector Configuration

connector: security-tools

# Queries for retrieving security tool data
queries:
  # Get all available security tools
  getAllSecurityTools:
    query: |
      SELECT * FROM security_tools
      WHERE is_enabled = true
      ORDER BY category, tool_name
    response: SecurityTool[]

  # Get security tool by ID
  getSecurityToolById:
    query: |
      SELECT * FROM security_tools
      WHERE tool_id = @toolId
    variables:
      toolId: UUID!
    response: SecurityTool

  # Get tools by category
# Mutations for creating and updating security tool data
mutations:
  createVulnerability:
    query: |
      INSERT INTO vulnerabilities (
        severity, cvss_score, affected_component, attack_vector,
        exploit_available, recommendation, status, discovered_at
      ) VALUES (
        @severity, @cvssScore, @affectedComponent, @attackVector,
        @exploitAvailable, @recommendation, 'OPEN', NOW()
      )
      RETURNING *
    variables:
      cveId: String
      title: String!
      description: String!
      severity: VulnerabilitySeverity!
      cvssScore: Float
      affectedComponent: String
      attackVector: String
      exploitAvailable: Boolean = false
      recommendation: String
    response: Vulnerability

  # Update vulnerability status
  updateVulnerabilityStatus:
    query: |
      UPDATE vulnerabilities
      SET status = @status,
          confirmed_at = CASE WHEN @status = 'CONFIRMED' THEN NOW() ELSE confirmed_at END,
          resolved_at = CASE WHEN @status IN ('FIXED', 'MITIGATED') THEN NOW() ELSE resolved_at END
      WHERE vulnerability_id = @vulnerabilityId
      RETURNING *
    variables:
      vulnerabilityId: UUID!
      status: VulnerabilityStatus!
    response: Vulnerability

  # Track tool execution
  createToolExecution:
    query: |
      INSERT INTO tool_executions (
        arguments, environment, status, started_at
      ) VALUES (
        @arguments, @environment, 'RUNNING', NOW()
      )
      RETURNING *
    variables:
      toolId: UUID!
      command: String!
      arguments: JSON
      environment: JSON
    response: ToolExecution

  # Complete tool execution
  completeToolExecution:
    query: |
      UPDATE tool_executions
      SET status = @status,
          completed_at = NOW(),
          duration_ms = EXTRACT(EPOCH FROM (NOW() - started_at))::int * 1000,
          stdout = @stdout,
          stderr = @stderr,
          exit_code = @exitCode
      WHERE execution_id = @executionId
      RETURNING *
    variables:
      executionId: UUID!
      status: ExecutionStatus!
      stdout: String
      stderr: String
      exitCode: Int
    response: ToolExecution

# Custom types for complex responses
types:
    avgDuration: Float
